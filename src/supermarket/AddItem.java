/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package supermarket;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import static supermarket.Billing.connect;

/**
 *
 * @author kartikey
 */
public class AddItem extends javax.swing.JFrame {
    public static Integer spinner;
    char Flag = 'X';
    public static Integer Available;
    public static Integer Spinner;
    /**
     * Creates new form AddItem
     */
    public AddItem() {
        initComponents();
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rice", "Wheat", "Sugar", "Oil" }));
        
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Add Product");

        jComboBox1.setFont(new java.awt.Font("FreeSans", 0, 15)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));
        jSpinner1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSpinner1StateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Fira Sans", 0, 15)); // NOI18N
        jLabel1.setText("Quantity");

        jLabel2.setFont(new java.awt.Font("Fira Sans", 0, 15)); // NOI18N
        jLabel2.setText("Price");

        jLabel3.setFont(new java.awt.Font("Fira Sans", 0, 15)); // NOI18N
        jLabel3.setText("0");

        jLabel4.setFont(new java.awt.Font("Fira Sans", 0, 15)); // NOI18N
        jLabel4.setText("Available ");

        jButton1.setFont(new java.awt.Font("Fira Sans", 0, 15)); // NOI18N
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Fira Sans", 0, 15)); // NOI18N
        jLabel5.setText("0");

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
          Integer price=0;
          Integer Available = 0;
          spinner = (Integer) jSpinner1.getValue();
          
          if(jComboBox1.getSelectedItem()=="Rice")
          {
              try {
                  price = 200;
                  price *= spinner;
                  Available = AllCounter("Rice");
                  Flag = 'R';
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          else if(jComboBox1.getSelectedItem()=="Wheat")
          {
              try {
                  price = 100;
                  price *= spinner;
                  Available = AllCounter("Wheat");
                  Flag = 'W';
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          else if(jComboBox1.getSelectedItem()=="Sugar")
          {
              try {
                  price = 300;
                  price *= spinner;
                  Available = AllCounter("Sugar");
                  Flag = 'S';
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          else if(jComboBox1.getSelectedItem()=="Oil")
          {
              try {
                  price = 500;
                  price *= spinner;
                  Available = AllCounter("Oil");
                  Flag = 'O';
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          if(spinner>Available)
              jButton1.setEnabled(false);
          else
              jButton1.setEnabled(true);
          Available -= spinner;
          if(Available<0)
              Available = 0;
          String PriceString = Integer.toString(price);
          String AvailableString = Integer.toString(Available);
          jLabel3.setText(PriceString);
          jLabel5.setText(AvailableString);
          Spinner = spinner;
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jSpinner1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinner1StateChanged
          Integer price=0;
          Available = 0;
          spinner = (Integer) jSpinner1.getValue();
          if(jComboBox1.getSelectedItem()=="Rice")
          {
              try {
                  price = 200;
                  price *= spinner;
                  Available = AllCounter("Rice");
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          else if(jComboBox1.getSelectedItem()=="Wheat")
          {
              try {
                  price = 100;
                  price *= spinner;
                  Available = AllCounter("Wheat");
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          else if(jComboBox1.getSelectedItem()=="Sugar")
          {
              try {
                  price = 300;
                  price *= spinner;
                  Available = AllCounter("Sugar");
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          else if(jComboBox1.getSelectedItem()=="Oil")
          {
              try {
                  price = 500;
                  price *= spinner;
                  Available = AllCounter("Oil");
              } catch (SQLException ex) {
                  Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
              }
          }
          if(spinner>Available)
              jButton1.setEnabled(false);
          else
              jButton1.setEnabled(true);
          Available -= spinner;
          if(Available<0)
              Available = 0;
          String PriceString = Integer.toString(price);
          String AvailableString = Integer.toString(Available);
          jLabel3.setText(PriceString);
          jLabel5.setText(AvailableString);
          Spinner = spinner;
          
          
    }//GEN-LAST:event_jSpinner1StateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(Available < 10)
        {
            if(Flag == 'R')
                SuperMarket.MessageDisplay("We're running out of Rice");
            else if(Flag == 'W')
                SuperMarket.MessageDisplay("We're running out of Wheat");
            else if(Flag == 'S')
                SuperMarket.MessageDisplay("We're running out of Sugar");
            else if(Flag == 'O')
                SuperMarket.MessageDisplay("We're running out of Oil");
        }
        
        String ItemName = (String) jComboBox1.getSelectedItem();
        try {
            selectedInsertion(ItemName);
        } catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        new Billing().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

       public static void insert(String ItemName, int BarCode,int Price) {
        String sql = "INSERT INTO TempPurchaseData(ItemName,BarCode,Price) VALUES(?,?,?)";
 
        try (Connection conn1 = connect();
                PreparedStatement pstmt = conn1.prepareStatement(sql)) {
            pstmt.setString(1, ItemName);
            pstmt.setInt(2, BarCode);
            pstmt.setInt(3, Price);
            
            pstmt.executeUpdate();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
       
    public int AllCounter(String Search) throws SQLException
    {
        String sql = "SELECT * from PurchaseData";
        Integer RiceCounter=0,WheatCounter=0,SugarCounter=0,OilCounter=0;
        String TempItemName;
        
        try (Connection conn = Billing.connect();
             Statement stmt  = conn.createStatement();
             ResultSet rs    = stmt.executeQuery(sql)){
            
            // loop through the result set
            while (rs.next()) {
                TempItemName = rs.getString("ItemName");
                if("Rice".equals(TempItemName))
                    RiceCounter++;
                else if("Wheat".equals(TempItemName))
                    WheatCounter++;
                else if("Sugar".equals(TempItemName))
                    SugarCounter++;
                else if("Oil".equals(TempItemName))
                    OilCounter++;
            }
            }
        if("Rice".equals(Search))
                return RiceCounter;
        else if("Wheat".equals(Search))
                return WheatCounter;
        else if("Sugar".equals(Search))
                return SugarCounter;
        else if("Oil".equals(Search))
                return OilCounter;
        else
            return 0;
    }
   
    public static void selectedInsertion(String ItemName) throws SQLException{
        String TempItemName = ItemName;
        String sql = "SELECT * from PurchaseData where ItemName = '"+TempItemName+"' Limit "+ spinner;
        int[] TempBarCode = new int[200];
        int TempPrice = 0;
        int i=0;
        
        try (Connection conn = connect();
             Statement stmt  = conn.createStatement();
             ResultSet rs    = stmt.executeQuery(sql)){
            
            // loop through the result set
            while (rs.next()) {
                TempItemName = rs.getString("ItemName");
                TempBarCode[i] = rs.getInt("BarCode");
                TempPrice = rs.getInt("Price");
                
                System.out.println(TempBarCode[i]);
                i++;
            }
        } 
         for(int j=0;j<i;j++)
        {insert(TempItemName,TempBarCode[j],TempPrice); System.out.print(TempBarCode[i]);}
    }
      
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            
       
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JSpinner jSpinner1;
    // End of variables declaration//GEN-END:variables
}
